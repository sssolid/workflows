# ===== pyproject.toml =====
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "crown-image-processing"
version = "2.0.0"
description = "Crown Automotive Image Processing System - Clean Architecture Implementation"
readme = "README.md"
authors = [
    {name = "Crown Automotive Sales Co., Inc."}
]
license = {text = "Proprietary"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Manufacturing",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Office/Business",
]
requires-python = ">=3.11"
dependencies = [
    "flask>=2.3.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "jinja2>=3.1.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "Pillow>=10.0.0",
    "opencv-python-headless>=4.8.0",
    "numpy>=1.24.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "rembg>=2.0.50",
    "onnxruntime",
    "pyodbc>=4.0.39",
    "jpype1>=1.4.0",
    "jaydebeapi>=1.2.3",
    "httpx>=0.24.0",
    "requests>=2.31.0",
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
    "PyYAML>=6.0",
    "structlog>=23.1.0",
    "python-dateutil>=2.8.0",
    "exifread>=3.0.0",
    "piexif>=1.1.3",
    "aiofiles>=23.1.0",
    "tqdm>=4.65.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.scripts]
crown-image-processing = "src.main:main"
crown-cli = "src.cli:main"

[project.urls]
"Homepage" = "https://crownauto.com"
"Repository" = "https://github.com/crownauto/image-processing"
"Documentation" = "https://docs.crownauto.com/image-processing"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.html", "*.css", "*.js"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["src"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "rembg.*",
    "cv2.*",
    "jpype.*",
    "jaydebeapi.*",
    "pyodbc.*",
    "torch.*",
    "torchvision.*",
    "onnxruntime.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "requires_db: marks tests that require database connection",
    "requires_ml: marks tests that require ML models",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]