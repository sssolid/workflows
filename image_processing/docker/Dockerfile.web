# ===== docker/Dockerfile.web =====
FROM python:3.11-alpine

# Install system dependencies
RUN apk add --no-cache \
    wget \
    curl \
    gcc \
    musl-dev \
    python3-dev \
    jpeg-dev \
    zlib-dev \
    freetype-dev \
    libffi-dev

# Create working directory
WORKDIR /app

# Copy web server requirements first for better caching
COPY requirements.web.txt /tmp/requirements.web.txt

# Install Python packages
RUN pip install --no-cache-dir -r /tmp/requirements.web.txt

# Create app user for security
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# Create directories with proper permissions
RUN mkdir -p /app/src /config /templates /assets /data && \
    chown -R appuser:appgroup /app /config /templates /assets /data

# Copy clean architecture source
COPY --chown=appuser:appgroup src/ /app/src/
COPY --chown=appuser:appgroup templates/ /app/templates/
COPY --chown=appuser:appgroup config/ /app/config/

# Set Python path
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Switch to non-root user
USER appuser

# Expose port for web server
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD wget --quiet --tries=1 --spider http://localhost:8080/api/status || exit 1

# Run web server
CMD ["python", "-m", "src.web.app"]